name: Docker Compose Workflow 

on:
 workflow_dispatch:

jobs:
  run-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Build indexer container
        uses: docker/build-push-action@v5
        with:
          load: true
          context: .
          file: ./indexer/Dockerfile
          tags: near-sffl-indexer
          cache-from: type=gha,scope=indexer
          cache-to: type=gha,mode=max,scope=indexer

      - name: Build relayer container
        uses: docker/build-push-action@v5
        with:
          load: true
          context: .
          file: ./relayer/cmd/Dockerfile
          tags: near-sffl-test-relayer
          cache-from: type=gha,scope=relayer
          cache-to: type=gha,mode=max,scope=relayer

      - name: Build aggregator container
        uses: docker/build-push-action@v5
        with:
          load: true
          context: .
          file: ./aggregator/cmd/Dockerfile
          tags: near-sffl-aggregator
          cache-from: type=gha,scope=aggregator
          cache-to: type=gha,mode=max,scope=aggregator

      - name: Build operator container
        uses: docker/build-push-action@v5
        with:
          load: true
          context: .
          file: ./operator/cmd/Dockerfile
          tags: near-sffl-operator
          cache-from: type=gha,scope=operator
          cache-to: type=gha,mode=max,scope=operator

      - name: Build and start Docker Compose services
        run: docker-compose -f ./docker-compose.yml up --build -d

      - name: Wait for services to stabilize
        run: sleep 300  # Wait for 5 minutes (300 seconds)

      - name: Check service status
        run: |
          services=$(docker-compose -f ./docker-compose.yml ps -q)
          for service in $services; do
            status=$(docker inspect -f '{{.State.Health.Status}}' $service)
            if [ "$status" != "healthy" ]; then
              echo "Service $service is not healthy"
              docker-compose -f ./docker-compose.yml logs $service
              exit 1
            fi
          done

      - name: Tear down Docker Compose services
        run: docker-compose -f ./docker-compose.yml down